<?php

/**
 * Implements hook_field_info().
 *
 * Provides the description of the field.
 */
function google_adwords_field_info() {
  return array(
    // We name our field as the associative name of the array.
    'google_adwords_label' => array(
      'label' => t('Google Adwords'),
      'description' => t('Add the Google Adwords Conversion label for this node.'),
      'default_widget' => 'google_adwords_text',
      'default_formatter' => 'google_adwords_default',
    ),
  );
}

/**
 * Implements hook_field_is_empty().
 *
 * hook_field_is_emtpy() is where Drupal asks us if this field is empty.
 * Return TRUE if it does not contain data, FALSE if it does. This lets
 * the form API flag an error when required fields are empty.
 */
function google_adwords_field_is_empty($item, $field) {
  return empty($item['label']);
}

/**
 * Implements hook_field_formatter_info().
 *
 * @see google_adwords_field_formatter_view()
 */
function google_adwords_field_formatter_info() {
  return array(
    'google_adwords_default' => array(
      'label' => t('Default'),
      'field types' => array('google_adwords_label'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * @see google_adwords_field_formatter_info()
 */
function google_adwords_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
	global $user;
 $element = array();
 
	$trackable = 0; 
	if (is_array($user->roles)) {
		foreach ($user->roles as $role) {
			$role = str_replace(' ', '_', $role);
			$trackable += variable_get("google_adwords_track_{$role}", FALSE);
		}
	}

	if ($trackable > 0) {
	 switch ($display['type']) {
	   case 'google_adwords_default':
	     foreach ($items as $delta => $item) {
	       $element[$delta] = array(
		       '#markup' => theme('google_adwords', array('label' => $item['label'])),
		       '#attached' => array(
          'css' => array(drupal_get_path('module', 'google_adwords') . '/google_adwords.css'),
	        ),
        );
	     }
	     break;
	 }
 }

 return $element;
}

/**
 * Implements hook_field_widget_info().
 *
 * These widget types will eventually show up in hook_field_widget_form,
 * where we will have to flesh them out.
 *
 * @see google_adwords_field_widget_form()
 */
function google_adwords_field_widget_info() {
  return array(
    'google_adwords_text' => array(
      'label' => t('Text Field'),
      'field types' => array('google_adwords_label'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 *
 * hook_widget_form() is where Drupal tells us to create form elements for
 * our field's widget.
 *
 */
function google_adwords_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $widget = array();

  switch ($instance['widget']['type']) {
    case 'google_adwords_text':
      $widget = $element + array(
        '#type' => 'textfield',
        '#default_value' => isset($items[$delta]['label']) ? $items[$delta]['label'] : '',
      );
      break;
  }

  $element['label'] = $widget;
  return $element;
  
}


function google_adwords_theme() {
  return array(
    'google_adwords' => array(
      'variables' => array('label' => NULL),
      'template' => 'google_adwords',
    ),
  );
}

function template_preprocess_google_adwords(&$variables) {
	global $language;
	
 $variables['id'] = variable_get('google_adwords_conversion_id', 0);
 $variables['language'] = variable_get('google_adwords_conversion_language', $language->language);
 $variables['format'] = variable_get('google_adwords_conversion_format', '2');
 $variables['color'] = variable_get('google_adwords_conversion_color', 'FFFFFF');
 $variables['google_js'] = variable_get('google_adwords_external_script', 'https://www.googleadservices.com/pagead/conversion.js');

}


/**
 * Implementation of hook_permission().
 */
function google_adwords_permission() {
  return array(
    'administer google adwords module' => array(
      'title' => t('Administer Google Adwords Module'),
    ),
    'edit google adwords parameters' => array(
      'title' => t('Edit Google Adwords Parameters'),
    ),
  );
}

function google_adwords_menu(){
	$items = array();
  $items['admin/config/system/google_adwords'] = array(
	  'title' => t('Google AdWords'),
	  'description' => t('Google AdWords Settings page.'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('google_adwords_admin_settings'),
	  'access arguments' => array('administer google adwords module'),
	  'file' => 'google_adwords.admin.inc',
  );
  return $items;
}

